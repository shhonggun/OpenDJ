/*
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions Copyright [year] [name of copyright owner]".
 *
 * Copyright 2008 Sun Microsystems, Inc.
 */
package org.forgerock.opendj.server.config.server;



import java.util.SortedSet;
import org.forgerock.opendj.config.server.ConfigurationChangeListener;
import org.forgerock.opendj.ldap.DN;



/**
 * A server-side interface for querying Json File Access Log Publisher
 * settings.
 * <p>
 * Json File Access Log Publishers Publish access messages to Json
 * files.
 */
public interface JsonFileAccessLogPublisherCfg extends AccessLogPublisherCfg {

  /**
   * Gets the configuration class associated with this Json File Access Log Publisher.
   *
   * @return Returns the configuration class associated with this Json File Access Log Publisher.
   */
  Class<? extends JsonFileAccessLogPublisherCfg> configurationClass();



  /**
   * Register to be notified when this Json File Access Log Publisher is changed.
   *
   * @param listener
   *          The Json File Access Log Publisher configuration change listener.
   */
  void addJsonFileAccessChangeListener(ConfigurationChangeListener<JsonFileAccessLogPublisherCfg> listener);



  /**
   * Deregister an existing Json File Access Log Publisher configuration change listener.
   *
   * @param listener
   *          The Json File Access Log Publisher configuration change listener.
   */
  void removeJsonFileAccessChangeListener(ConfigurationChangeListener<JsonFileAccessLogPublisherCfg> listener);



  /**
   * Gets the "java-class" property.
   * <p>
   * The fully-qualified name of the Java class that provides the Json
   * File Access Log Publisher implementation.
   *
   * @return Returns the value of the "java-class" property.
   */
  String getJavaClass();



  /**
   * Gets the "log-control-oids" property.
   * <p>
   * Specifies whether control OIDs will be included in operation log
   * records.
   *
   * @return Returns the value of the "log-control-oids" property.
   */
  boolean isLogControlOids();



  /**
   * Gets the "log-directory" property.
   * <p>
   * The directory to use for the log files generated by the Json File
   * Access Log Publisher. The path to the directory is relative to the
   * server root.
   *
   * @return Returns the value of the "log-directory" property.
   */
  String getLogDirectory();



  /**
   * Gets the "retention-policy" property.
   * <p>
   * The retention policy to use for the Json File Access Log
   * Publisher.
   * <p>
   * When multiple policies are used, log files are cleaned when any
   * of the policy's conditions are met.
   *
   * @return Returns an unmodifiable set containing the values of the "retention-policy" property.
   */
  SortedSet<String> getRetentionPolicy();



  /**
   * Gets the "retention-policy" property as a set of DNs.
   * <p>
   * The retention policy to use for the Json File Access Log
   * Publisher.
   * <p>
   * When multiple policies are used, log files are cleaned when any
   * of the policy's conditions are met.
   *
   * @return Returns the DN values of the "retention-policy" property.
   */
  SortedSet<DN> getRetentionPolicyDNs();



  /**
   * Gets the "rotation-policy" property.
   * <p>
   * The rotation policy to use for the Json File Access Log
   * Publisher.
   * <p>
   * When multiple policies are used, rotation will occur if any
   * policy's conditions are met.
   *
   * @return Returns an unmodifiable set containing the values of the "rotation-policy" property.
   */
  SortedSet<String> getRotationPolicy();



  /**
   * Gets the "rotation-policy" property as a set of DNs.
   * <p>
   * The rotation policy to use for the Json File Access Log
   * Publisher.
   * <p>
   * When multiple policies are used, rotation will occur if any
   * policy's conditions are met.
   *
   * @return Returns the DN values of the "rotation-policy" property.
   */
  SortedSet<DN> getRotationPolicyDNs();

}
