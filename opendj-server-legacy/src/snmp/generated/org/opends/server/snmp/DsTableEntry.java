package org.opends.server.snmp;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling DIRECTORY-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "DsTableEntry" group.
 * The group is defined with the following oid: 1.3.6.1.2.1.66.1.1.
 */
public class DsTableEntry implements DsTableEntryMBean, Serializable {

    /**
     * Variable for storing the value of "DsCacheHits".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.6".
     *
     * " Number of operations that were serviced from
     * the locally held cache."
     *
     */
    protected Long DsCacheHits = new Long(1);

    /**
     * Variable for storing the value of "DsCacheEntries".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.5".
     *
     * " Number of entries cached (non-systematic copies) in
     * the Directory Server. This will include the entries that
     * are cached partially. The negative cache is not counted."
     *
     */
    protected Long DsCacheEntries = new Long(1);

    /**
     * Variable for storing the value of "DsCopyEntries".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.4".
     *
     * " Number of entries for which systematic (slave)
     * copies are maintained in the Directory Server."
     *
     */
    protected Long DsCopyEntries = new Long(1);

    /**
     * Variable for storing the value of "DsMasterEntries".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.3".
     *
     * " Number of entries mastered in the Directory Server."
     *
     */
    protected Long DsMasterEntries = new Long(1);

    /**
     * Variable for storing the value of "DsServerDescription".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.2".
     *
     * "A text description of the application.  This information
     * is intended to identify and briefly describe the
     * application in a status display."
     *
     */
    protected String DsServerDescription = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "DsServerType".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.1".
     *
     * "This object indicates whether the server is
     * a frontend or, a backend or, both. If the server
     * is a frontend, then the frontEndDirectoryServer
     * 
     * bit will be set. Similarly for the backend."
     *
     */
    protected Byte[] DsServerType = { new Byte("74"), new Byte("68"), new Byte("77"), new Byte("75")};

    /**
     * Variable for storing the value of "DsSlaveHits".
     * The variable is identified by: "1.3.6.1.2.1.66.1.1.7".
     *
     * " Number of operations that were serviced from
     * the locally held object replications ( copy-
     * entries)."
     *
     */
    protected Long DsSlaveHits = new Long(1);

    /**
     * Variable for storing the value of "ApplIndex".
     * The variable is identified by: "1.3.6.1.2.1.27.1.1.1".
     *
     * "An index to uniquely identify the network service
     * application. This attribute is the index used for
     * lexicographic ordering of the table."
     *
     */
    protected Integer ApplIndex = new Integer(1);


    /**
     * Constructor for the "DsTableEntry" group.
     */
    public DsTableEntry(SnmpMib myMib) {
    }

    /**
     * Getter for the "DsCacheHits" variable.
     */
    public Long getDsCacheHits() throws SnmpStatusException {
        return DsCacheHits;
    }

    /**
     * Getter for the "DsCacheEntries" variable.
     */
    public Long getDsCacheEntries() throws SnmpStatusException {
        return DsCacheEntries;
    }

    /**
     * Getter for the "DsCopyEntries" variable.
     */
    public Long getDsCopyEntries() throws SnmpStatusException {
        return DsCopyEntries;
    }

    /**
     * Getter for the "DsMasterEntries" variable.
     */
    public Long getDsMasterEntries() throws SnmpStatusException {
        return DsMasterEntries;
    }

    /**
     * Getter for the "DsServerDescription" variable.
     */
    public String getDsServerDescription() throws SnmpStatusException {
        return DsServerDescription;
    }

    /**
     * Getter for the "DsServerType" variable.
     */
    public Byte[] getDsServerType() throws SnmpStatusException {
        return DsServerType;
    }

    /**
     * Getter for the "DsSlaveHits" variable.
     */
    public Long getDsSlaveHits() throws SnmpStatusException {
        return DsSlaveHits;
    }

    /**
     * Getter for the "ApplIndex" variable.
     */
    public Integer getApplIndex() throws SnmpStatusException {
        return ApplIndex;
    }

}
